# === END SYNOPSIS HEADER ===
# === END SYNOPSIS HEADER ===
# === END SYNOPSIS HEADER ===
# === END SYNOPSIS HEADER ===
# === END SYNOPSIS HEADER ===
"""
Code Synopsis Annotator - Modular Code Analysis Tool

A comprehensive Python code analyzer that generates detailed synopsis headers
for Python files, including function call hierarchies, state machine detection,
threading analysis, and modularization recommendations.
"""

import importlib; import sys
for m in ["core_analyzer", "behavioral_analysis", "file_io", "intent_inference", "synopsis_renderer"]:
    if m in sys.modules:
        importlib.reload(sys.modules[m])

from .core_analyzer import CodeAnalyzer
from .behavioral_analysis import BehavioralAnalyzer
from .synopsis_renderer import SynopsisRenderer
from .file_io import FileIOHandler
from .utils import CodeUtils
from .intent_inference import inject_intent  # NEW

__version__ = "2.1.0"  # bumped
__author__ = "Code Synopsis Annotator Team"

__all__ = [
    'CodeAnalyzer',
    'BehavioralAnalyzer', 
    'SynopsisRenderer',
    'FileIOHandler',
    'CodeUtils',
    'inject_intent',  # NEW
]
